server {
    listen 80;
    server_name localhost;

    # Set a default response for all locations
    location / {
        return 200 '{"message":"I am nginx"}';
        add_header Content-Type application/json;
    }

    # Debug endpoint to check if Nginx is working
    #location /test {
    #    return 200 '{"message":"I am nginx"}';
    #    add_header Content-Type application/json;
    #}

    # Direct access endpoints
    location /direct-features {
        return 200 '{"message":"I am nginx"}';
        add_header Content-Type application/json;
    }

    location /direct-api-features {
        return 200 '{"message":"I am nginx"}';
        add_header Content-Type application/json;
    }

    location /direct-locations {
        return 200 '{"message":"I am nginx"}';
        add_header Content-Type application/json;
    }

    location /direct-root {
        return 200 '{"message":"I am nginx"}';
        add_header Content-Type application/json;
    }

    # Locations features endpoint with locationId
    location ~ ^/api/locations/([^/]+)/features {
        return 200 '{"message":"I am nginx"}';
        add_header Content-Type application/json;
    }

    # All features endpoint
    location = /api/locations/features {
        return 200 '{"message":"I am nginx"}';
        add_header Content-Type application/json;
    }

    # Main locations endpoint
    #location /api/locations {
    #    return 200 '{"message":"I am nginx"}';
    #    add_header Content-Type application/json;
    #}

    location /api/locations {
        resolver 127.0.0.11 ipv6=off;
	proxy_set_header X-Service locations;
        include /etc/nginx/proxy_params;
        proxy_intercept_errors on;
        #proxy_pass http://192.168.1.174:8082/$1$is_args$args;
        proxy_pass http://192.168.1.174:8082;
        error_page 502 503 504 = /fallback;
    }



    # Health check route
    location /health {
        return 200 '{"message":"I am nginx"}';
        add_header Content-Type application/json;
    }
}
